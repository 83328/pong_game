name: ft_transcendence

# these are common to all containers
x-common: &common
  env_file:
    - .env
  restart: on-failure
  networks:
    - transcendence_network
  init: true

services:
  postgres:
    <<: *common
    image: "postgres:16"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    <<: *common
    image: "redis:alpine"
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    <<: *common
    build: src/ft_transcendence_backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  game:
    <<: *common
    build: src/ft_transcendence_backend/game
    command: python3 -m uvicorn pong_game:app --host 0.0.0.0 --port 8001 --reload
    ports:
      - "8001:8001"

  caddy:
    <<: *common
    build:
      context: ./src/
      dockerfile: caddy/Dockerfile
    ports:
      - "8081:80"  # Run Caddy on a different port for testing
      - "8444:443"  # Run Caddy on a different port for testing
    depends_on:
      - backend
    extra_hosts:
      - "host.docker.internal:host-gateway"

  nginx:
    <<: *common
    build:
      context: ./src/
      dockerfile: nginx/Dockerfile
    depends_on:
      - backend
    ports:
      - "8080:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./src/nginx/logs:/var/log/nginx

  grafana:
   <<: *common
   build: ./src/grafana
   image: grafana/otel-lgtm
   ports:
     - "3000:3000"
     - "4317:4317"
     - "4318:4318"
   volumes:
     - grafana_data:/var/lib/grafana

#   portainer:
#     <<: *common
#     build: src/portainer
#     volumes:
#       - "/var/run/docker.sock:/var/run/docker.sock:ro"
#       - portainer-data:/data
#     depends_on:
#       - nginx
#     networks:
#       - transcendence_network
#     ports:
#       - "9443:9443"

volumes:
  postgres_data:
  redis_data:
  grafana_data:
  portainer-data:

networks:
  transcendence_network:
    name: transcendence_network
    driver: bridge
