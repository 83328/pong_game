services:
  postgres:
    image: "postgres:16"
    container_name: ft_transcendence_postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: transcendence
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - transcendence_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: "redis:alpine"
    container_name: ft_transcendence_redis
    restart: always
    networks:
      - transcendence_network
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"] 
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./src/ft_transcendence_backend
      dockerfile: dockerfile
    container_name: ft_transcendence_backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/transcendence
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OTEL_SERVICE_NAME=django-app
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://grafana:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED=true
      - OTEL_METRIC_EXPORT_INTERVAL=500
      - ENABLE_OTEL=true
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=transcendence-backend
      - OTEL_RESOURCE_ATTRIBUTES=deployment.environment=development,service.version=1.0.0
      - OTEL_TRACES_SAMPLER=parentbased_always_on
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_PYTHON_LOG_CORRELATION=true
    networks:
      - transcendence_network
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  game:
    build:
      context: ./src/ft_transcendence_backend/game
      dockerfile: dockerfile
    container_name: ft_transcendence_game
    restart: always
    command: python3 -m uvicorn pong_game:app --host 0.0.0.0 --port 8001 --reload
    networks:
      - transcendence_network
    ports:
      - "8001:8001"

  #caddy:
  #  build:
  #    context: ./src/
  #    dockerfile: caddy/Dockerfile
  #  container_name: ft_transcendence_caddy
  #  restart: always
  # depends_on:
  #    - backend
  #  networks:
  #    - transcendence_network
  #  ports:
  #    - "8080:80"
  #    - "8443:443"
  #  extra_hosts:
  #   - "host.docker.internal:host-gateway"

  nginx:
    build:
      context: ./src/
      dockerfile: nginx/dockerfile
    container_name: ft_transcendence_nginx
    restart: always
    depends_on:
      - backend
    networks:
      - transcendence_network
    ports:
      - "8080:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
    - OTEL_EXPORTER_OTLP_ENDPOINT=http://grafana:4317
    volumes:
    - ./nginx/logs:/var/log/nginx

  grafana:
    image: grafana/otel-lgtm
    container_name: grafana
    ports:
      - "3000:3000"
      - "4317:4317"
      - "4318:4318"
    environment:
      - OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED=true  # Fixed syntax
      - OTEL_LOGS_EXPORTER=otlp
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_DEFAULT_THEME=dark
    networks:
      - transcendence_network
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres_data:
  redis_data:
  grafana_data:

networks:
  transcendence_network:
    driver: bridge
