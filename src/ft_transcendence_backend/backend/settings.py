"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""



from pathlib import Path

import os

BASE_DIR = Path(__file__).resolve().parent.parent

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7891*hs6jd=fd_kacvcjx^_o=b1347g5&#8ho#dm^xuh-e+7do'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#ALLOWED_HOSTS = []
#ALLOWED_HOSTS = ["localhost", "127.0.0.1", "0.0.0.0", "172.17.0.1"]
ALLOWED_HOSTS = ["*"]  # Lässt alle Hosts zu (unsicher für Produktion!)




# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # django rest framework
    'corsheaders',
    'rest_framework',
    'django_extensions',
]

INSTALLED_APPS += ['api']
INSTALLED_APPS += ['users']

AUTH_USER_MODEL = 'users.CustomUser'

# Erlaubt Anfragen von allen Hosts (für Testing)
CORS_ALLOW_ALL_ORIGINS = True
# Alternativ, wenn du nur dein Frontend zulassen willst:
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:8080",
# ]


MIDDLEWARE = [
     "corsheaders.middleware.CorsMiddleware",  # Muss ganz oben stehen!
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'transcendence',
        'USER': 'user',
        'PASSWORD': 'password',
        'HOST': 'postgres',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


from datetime import timedelta

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),  # Token gültig für 1h
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),  # Refresh-Token gültig für 7 Tage
    'AUTH_HEADER_TYPES': ('Bearer',),
}

# these settings are for the make tests. We need to find a way to distinguish which environment should load what.

#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # Nur für Entwicklung
#EMAIL_HOST = 'smtp.example.com'
#EMAIL_PORT = 587
#EMAIL_USE_TLS = True
#EMAIL_HOST_USER = 'deine_email@example.com'
#EMAIL_HOST_PASSWORD = 'dein_passwort'

#better way
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#EMAIL_HOST = 'sandbox.smtp.mailtrap.io'
#EMAIL_HOST_USER = '24e67ab734e89a'
#EMAIL_HOST_PASSWORD = 'eae206d24f0b6c'
#EMAIL_PORT = '2525'

#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#EMAIL_HOST = 'live.smtp.mailtrap.io'
#EMAIL_HOST_USER = 'api'
#EMAIL_HOST_PASSWORD = 'e87fa22620962c71ff13ccea8f2c3165'
#EMAIL_PORT = '587'


#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#EMAIL_HOST = 'smtp.mandrillapp.com'
#EMAIL_HOST_USER = 'ohoro@student.42berlin.de'
#EMAIL_HOST_PASSWORD = 'md-2Nhzq490JIKqYkdsFfKbQw'
#EMAIL_USE_TLS = True
#EMAIL_PORT = '587'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp-relay.brevo.com'
EMAIL_HOST_USER = '849697001@smtp-brevo.com'
EMAIL_HOST_PASSWORD = 'kOmqRp1jT6KrPbWY'
EMAIL_USE_TLS = True
EMAIL_PORT = '587'
