input {
  gelf {
	host => "0.0.0.0"
    port => 12201
    type => "docker"
  }
}

filter {
#   pattern_definition => { "MYTIME" => "%{MONTHNUM}/%{MONTHDAY} %{TIME} [AP]M"}
#   match => { "message" => "%{MYTIME:timestamp}" }


  mutate {
    rename => { "host" => "hostname" }
	gsub => [
	  "message", "\r", "",
	  "message", "\n", ""
	]
  }

  # Parse backend logs (tag: "backend")
  if [tag] == "backend" {
    grok {
      match => { 
        "message" => "%{IPORHOST:client_ip}:%{POSINT:client_port} \- \- \[%{MONTHDAY:day}/%{MONTH:month}/%{YEAR:year}:%{TIME:time}\] \"%{WORD:http_method} %{URIPATHPARAM:request_path}.*\" %{NUMBER:http_status} %{NUMBER:response_size}" 
      }
      remove_tag => ["_grokparsefailure"]
      add_tag => ["http_request"]
    }

    date {
      match => ["timestamp", "dd/MMM/yyyy:HH:mm:ss"]
      target => "@timestamp"
      remove_field => ["timestamp"]
    }
  }
  
  # Parse game logs (tag: "game")
  if [tag] == "game" {
    grok {
      match => { 
        "message" => "%{GREEDYDATA:log_message}" 
        # Add custom patterns for game logs if needed
      }
      remove_tag => ["_grokparsefailure"]
    }
  }

  # Parse redis logs (tag: "redis")
  if [tag] == "redis" {
    grok {
     match => { "message" => "%{NONNEGINT:pid}:%{WORD:log_level}\s+%{MONTHDAY:day} %{MONTH:month} %{YEAR:year} %{TIME:time} (?<redis_priority>[*#\.-]) %{GREEDYDATA:redis_message}" }
      remove_tag => ["_grokparsefailure"]
	  add_tag => ["redis_parsed"]
    }
  }

#   if [tag] == "caddy"  {
# 	json {
#       source => "message"
#     #   remove_field => ["message"]  # Optional: keep original if needed
#     }
#   }



  }



#   # Fallback for other tags (optional)
#   if "_grokparsefailure" in [tags] {
#     mutate {
#       add_tag => ["unparsed_log"]
#     }
#   }
# }

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "docker-logs-%{+yyyy.MM.dd}"
  }
  stdout { codec => rubydebug }
}